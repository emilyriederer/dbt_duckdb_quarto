---
format: gfm
jupyter: python3
execute:
  echo: false
  message: false
output-file: ../models/overview.md
---

```
{% docs __overview__ %}
```

```{python}
# define database connection
# TODO: could source connection info directly from `profiles.yml`
import duckdb
import pandas

con = duckdb.connect(database='../jaffle_shop.duckdb', read_only=False)

# define query
# TODO: could read in query file as rendered by a dbt `analysis`
query = """
  select 
    datepart('month', order_date) as month,
    min(order_date) as start_date,
    max(order_date) as end_date,
    count(1) as orders,
    sum(amount) as amount,
    avg(amount) as avg_order_amount,
    avg(
      case when order_date = first_order 
      then 1 
      else 0 
      end) as pct_order_new_cust 
  from
    orders 
      left join 
    customers
      on
      orders.customer_id = customers.customer_id
  where
    status = 'completed' and
    order_date >= '2018-01-01'
  group by 1
"""

# retrieve results
con.execute(query)
res = con.fetchdf()
```

## Data Documentation for Jaffle Shop

`jaffle_shop` is a fictional ecommerce store.

```{python txt_lastdttm}
from IPython.display import display, Markdown

display(Markdown(f"""
The orders table is updated to contain date through **{res.end_date.max()}**.
"""))
```

The following summarizes recent order trends:

```{python tbl_kpis}
print(res.to_string(index = False))
```

Key KPIs are plotted below:

```{python plot_avgamt}
_ = res.plot.bar(
  x = "month", 
  y = "avg_order_amount", 
  ylim = (0, 25),
  title = "Average Order Amount ($)",
  legend = False
  )
```

```{python plot_newcust}
_ = res.plot.line(
  x = "month", 
  y = "pct_order_new_cust", 
  ylim = (0,1),
  title = "% Orders from New Customers",
  legend = False
  )
```

{% enddocs %}